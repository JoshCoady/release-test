name: CI
on:
  pull_request:
  push:
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test
        run: ./test.sh

      - name: Release
        id: release
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag
        env:
          TAG: v${{ steps.release.outputs.new_release_major_version }}
        run: |
          git tag "$TAG"
          git push origin "$TAG"

      - name: Slackify release notes
        id: slackify_release_notes
        uses: LoveToKnow/slackify-markdown-action@v1
        with:
          text: ${{ steps.release.outputs.new_release_notes }}

      - name: Notify slack
        if: steps.release.outputs.new_release_published == 'true'
#        uses: aibexhq/slack-rich-notify@v1.0.2
#        with:
#          token: ${{secrets.SLACK_BUILDBOT_TOKEN}} # your slack bot key
#          secret: ${{secrets.SS}} # your slack signing secret
#          channel: U081Z9XTP
#          message: |
#            ${{ steps.slackify_release_notes.outputs.text }}
        uses: pullreminders/slack-action@v1.0.9
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BUILDBOT_TOKEN }}
        with:
          args: '{
            \"channel\":\"U081Z9XTP\",
            \"blocks\": [{
              \"type\": \"section\",
              \"text\": {
                \"type\": \"mrkdwn\",
                \"text\": \"v${{ steps.release.outputs.new_release_version }}\"
              }
            }, {
              \"type\": \"section\",
              \"text\": {
                \"type\": \"mrkdwn\",
                \"text\": \"${{ steps.slackify_release_notes.outputs.text }}\"
              }
            }]
          }'

      - name: Convert
        id: convert
        uses: ./.github/actions/md2mrkdwn
        with:
          text: |
            # Heading 1

            ## Heading 2

            [Link](http://example.com)

            * List Item 1
            * List Item 2

      - name: Verify
        shell: bash
        env:
          ACTUAL: ${{ steps.convert.outputs.text }}
          EXPECTED: |
            *Heading 1*

            *Heading 2*

            <http://example.com|Link>

            •   List Item 1
            •   List Item 2
        run: |
          if [ "$ACTUAL" == "$EXPECTED" ]; then
            exit 0
          else
            echo "Actual: $ACTUAL"
            echo "Expected: $EXPECTED"
            exit 1
          fi
